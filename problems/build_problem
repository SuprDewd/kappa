#!/usr/bin/env python3
import sys
import os
import shutil
import glob
import yaml
import re
from subprocess import Popen, PIPE
DIR = os.path.dirname(os.path.abspath(__file__))
PROBLEMTOOLS = os.getenv("PROBLEMTOOLS", os.path.join(DIR, 'problemtools'))

problem_dir = os.path.abspath(sys.argv[1])
output_dir = os.path.join(problem_dir, '.epsilon')

if os.path.exists(output_dir):
    shutil.rmtree(output_dir)
os.mkdir(output_dir)

print('Generating HTML')
p = Popen([os.path.join(PROBLEMTOOLS, 'problem2html.py'), problem_dir, '-b', '-d', os.path.join(output_dir, 'statement')], stdout=PIPE)
if p.wait() != 0:
    print('Errors while generating HTML')
    sys.exit(1)

with open(os.path.join(output_dir, 'statement', 'index.html'), 'r') as f:
    mat = re.search('<h1>(.*?)</h1>', f.read(), re.DOTALL)
    if mat:
        problem_title = mat.group().split('<h1>')[1].split('</h1>')[0].replace('\n', ' ')

tests = {'sample': [], 'secret': []}
for test_type in tests:
    for tfile in sorted(glob.glob(os.path.join(problem_dir, 'data', test_type, '*.in'))):
        with open(tfile, 'r') as f:
            inp = f.read()
        with open(os.path.splitext(tfile)[0] + '.ans', 'r') as f:
            outp = f.read()
        tests[test_type].append((test_type + '__' + os.path.splitext(os.path.basename(tfile))[0], inp, outp))

problem_yaml = {
    'title': problem_title,
    'examples': []
}

for _, inp, outp in tests['sample']:
    problem_yaml['examples'].append({'input': inp, 'output': outp})

with open(os.path.join(output_dir, 'problem.yml'), 'w') as f:
    yaml.dump(problem_yaml, stream=f)

os.mkdir(os.path.join(output_dir, 'tests'))
for test_type in tests:
    for test, inp, outp in tests[test_type]:
        with open(os.path.join(output_dir, 'tests', test + '.in'), 'w') as f:
            f.write(inp)
        with open(os.path.join(output_dir, 'tests', test + '.out'), 'w') as f:
            f.write(outp)

